name: Release

on:
  push:
    tags:
      - '*.*.*'      

jobs:
  build_and_release:
    runs-on: ubuntu-latest

    steps:
      - name: Check out source code
        uses: actions/checkout@v3

      - name: Extract version from tag
        id: get_tag
        run: echo "TAG_NAME=${GITHUB_REF_NAME}" >> $GITHUB_OUTPUT

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and Push Docker image
        run: |
          VERSION=${{ steps.get_tag.outputs.TAG_NAME }}
          docker build -t juanwz/tasky:"$VERSION" .
          docker push juanwz/tasky:"$VERSION"

      - name: Check out Helm Chart repo
        uses: actions/checkout@v3
        with:
          repository: juanbrny/tasky-chart
          # Make sure your PAT has permission to push changes
          token: ${{ secrets.HELM_CHART_PAT }}
          path: helm-charts  # folder to clone the Helm repo into

      - name: Update Chart.yaml
        working-directory: helm-charts
        run: |
          VERSION=${{ steps.get_tag.outputs.TAG_NAME }}
          CHART_DIR="your-chart"  # If your Chart.yaml is at the root, use "." instead
          
          # Update appVersion in Chart.yaml:
          sed -i "s|^appVersion: .*|appVersion: ${VERSION}|" "${CHART_DIR}/Chart.yaml"

          # (Optional) If you also want to update 'version:' in Chart.yaml to keep them aligned, uncomment:
          # sed -i "s|^version: .*|version: ${VERSION}|" "${CHART_DIR}/Chart.yaml"

      - name: Commit and push chart changes
        working-directory: helm-charts
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          git add .
          git commit -m "Update Helm chart to version ${{ steps.get_tag.outputs.TAG_NAME }}"
          git push

      - name: Create a tag in the Helm chart repo
        working-directory: helm-charts
        run: |
          VERSION=${{ steps.get_tag.outputs.TAG_NAME }}
          git tag "v${VERSION}"
          git push origin "v${VERSION}"
